@using Diploma.Resources
@model Diploma.DiplomaDb.Skill

@{
    ViewBag.Title = Resource.AddNew;
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm(new { returnURL = ViewBag.ReturnURL }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Skill</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CaptionEN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CaptionEN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CaptionEN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CaptionRU, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CaptionRU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CaptionRU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CaptionUA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CaptionUA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CaptionUA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionEN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DescriptionEN, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DescriptionEN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionRU, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DescriptionRU, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DescriptionRU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionUA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DescriptionUA, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DescriptionUA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Resource.Add" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <a href="@ViewBag.ReturnURL">@Resource.Back</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
